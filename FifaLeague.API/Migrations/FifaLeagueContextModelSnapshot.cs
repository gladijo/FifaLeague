// <auto-generated />
using FifaLeague.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FifaLeague.API.Migrations
{
    [DbContext(typeof(FifaLeagueContext))]
    partial class FifaLeagueContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FifaLeague.API.Models.Match", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("OneID");

                    b.Property<int>("ScoreTeamOne");

                    b.Property<int>("ScoreTeamTwo");

                    b.Property<int?>("TwoID");

                    b.Property<DateTime>("When");

                    b.HasKey("ID");

                    b.HasIndex("OneID");

                    b.HasIndex("TwoID");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("FifaLeague.API.Models.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int?>("TeamID");

                    b.HasKey("ID");

                    b.HasIndex("TeamID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("FifaLeague.API.Models.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SoccerTeam");

                    b.HasKey("ID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FifaLeague.API.Models.Match", b =>
                {
                    b.HasOne("FifaLeague.API.Models.Team", "One")
                        .WithMany()
                        .HasForeignKey("OneID");

                    b.HasOne("FifaLeague.API.Models.Team", "Two")
                        .WithMany()
                        .HasForeignKey("TwoID");
                });

            modelBuilder.Entity("FifaLeague.API.Models.Player", b =>
                {
                    b.HasOne("FifaLeague.API.Models.Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamID");
                });
#pragma warning restore 612, 618
        }
    }
}
